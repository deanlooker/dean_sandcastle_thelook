view: pentester_and_team_applicants {
  derived_table: {
    sql: select
      /*teams.handle,
      pp.pentest_id,
      */
      users.username,
      users.id user_id,
      profiles.h1_pentester_lead,
      users.tax_form_country,
      teams.handle handle
      /*pp.applied_at,
      pp.accepted_at,
      case when 1=1 then 3 else null end as desired_count */
      from pentests p
      left join pentesters pp on pp.pentest_id = p.id and pp.applied_at is not null
      left join teams on teams.id = p.team_id
      left join users on users.id = pp.user_id
      --left join pentester_profiles_preferred_teammates pppt on pppt.user_id = users.id
      left join pentester_profiles profiles on profiles.user_id = users.id

      where teams.handle = {% parameter potential_pentester_groups.handle %}
      group by 1,2,3,4,5
      ;;
    sql_trigger_value: SELECT CURRENT_DATE ;;
    indexes: ["user_id"]
  }

  measure: count {
    type: count
    drill_fields: [detail*]
  }

  dimension: username {
    type: string
    sql: ${TABLE}."username" ;;
  }

  dimension: user_id {
    type: number
    sql: ${TABLE}."user_id" ;;
  }

  dimension: h1_pentester_lead {
    type: string
    sql: ${TABLE}."h1_pentester_lead" ;;
  }

  dimension: tax_form_country {
    type: string
    sql: ${TABLE}."tax_form_country" ;;
  }

  parameter: handle {
    type: string
  }
# dimension: handle {
# type: string
# sql: ${TABLE}."handle" ;;
# }

  set: detail {
    fields: [username, user_id, h1_pentester_lead, tax_form_country]
  }
}
